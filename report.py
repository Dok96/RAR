import threading
import time
from stopScript.stp import input_listener
from plc.plc_manager import PlcManager  # –ù–æ–≤—ã–π –º–æ–¥—É–ª—å –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ü–õ–ö
from config import plc_ip,slot,rack, db_number,offset_len,offset_trigger

# –°–æ–∑–¥–∞—ë–º –æ–±—ä–µ–∫—Ç Event –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º
stop_event = threading.Event()

def main_task(plc_manager):
    """
    –û—Å–Ω–æ–≤–Ω–æ–π –ø–æ—Ç–æ–∫: –≤—ã–ø–æ–ª–Ω—è–µ—Ç –∑–∞–¥–∞—á–∏, –ø–æ–∫–∞ stop_event –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω.
    """
    print(f'plc_ip:{plc_ip}, slot:{slot}, rack {rack},'
          f'\n db ‚Ññ {db_number} : \n –¥–ª–∏–Ω–∞ dbd{offset_len} ,\n —Ç—Ä–∏–≥–≥–µ—Ä: dbx4.0,\n –ª–∏–Ω–∏—è –≤ —Ä–∞–±–æ—Ç–µ: dbx4.1,'
          f'\n –∑–∞–ø—Ä–æ—Å –≤ —Ä—É—á–Ω–æ–º —Ä–µ–∂–∏–º–µ dbx4.2')

    # –ø–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ —Å–∫—Ä–∏–ø—Ç–∞ plc_manager
    while not stop_event.is_set():  # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–ª–∞–≥
        # –ü–æ–ª—É—á–∞–µ–º –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ —Å –ü–õ–ö
        length = plc_manager.get_length()
        trigger = plc_manager.get_trigger()  # —Ç—Ä–∏–≥–≥–µ—Ä —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è –ø—Ä–æ—Ç–æ–∫–æ–ª–∞
        lineRun = plc_manager.get_line_run()  # —Ç—Ä–∏–≥–≥–µ—Ä –ª–∏–Ω–∏—è –≤ —Ä–∞–±–æ—Ç–µ
        manReqProtocol = plc_manager.get_man_req_protocol() # —Ç—Ä–∏–≥–≥–µ—Ä —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ—Ç–æ–∫–æ–ª–∞ –≤ —Ä—É—á–Ω–æ–º —Ä–µ–∂–∏–º–µ


        #print(f"–î–ª–∏–Ω–∞ : {length}, —Ç—Ä–∏–≥–≥–µ—Ä : {trigger}")
        #time.sleep(3)

        if trigger == True and not p1:
            print(f"–î–ª–∏–Ω–∞ : {length}, —Ç—Ä–∏–≥–≥–µ—Ä : {trigger}, Run: : {lineRun}, manReq : {manReqProtocol}")

            #—Å–±—Ä–æ—Å —Ç—Ä–∏–≥–≥–µ—Ä–∞
            time.sleep(3)
            plc_manager.reset_trigger()
            plc_manager.lump_send_fault_plc()
            plc_manager.spark_send_fault_plc()


        p1=trigger


if __name__ == "__main__":
    print("–ó–∞–ø—É—Å–∫ —Å–∫—Ä–∏–ø—Ç–∞... –î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –≤–≤–µ–¥–∏—Ç–µ 'Y'.")

    # –°–æ–∑–¥–∞—ë–º –æ–±—ä–µ–∫—Ç –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –ü–õ–ö
    plc_manager = PlcManager()

    # –ó–∞–ø—É—Å–∫–∞–µ–º –ø–æ—Ç–æ–∫ –¥–ª—è —á—Ç–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö —Å –ü–õ–ö
    plc_thread = threading.Thread(target=plc_manager.start, daemon=True)
    plc_thread.start()

    # –ó–∞–ø—É—Å–∫–∞–µ–º –ø–æ—Ç–æ–∫ –¥–ª—è –≤–≤–æ–¥–∞
    input_thread = threading.Thread(target=input_listener, args=(stop_event,), daemon=True)
    input_thread.start()

    # –ó–∞–ø—É—Å–∫–∞–µ–º –æ—Å–Ω–æ–≤–Ω—É—é –∑–∞–¥–∞—á—É
    try:
        main_task(plc_manager)
    except KeyboardInterrupt:
        print("\nüõë –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∞ (Ctrl+C).")
    finally:
        stop_event.set()  # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–ª–∞–≥ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
        plc_manager.stop()  # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–æ—Ç–æ–∫ —á—Ç–µ–Ω–∏—è —Å –ü–õ–ö

        print("–°–∫—Ä–∏–ø—Ç –∑–∞–≤–µ—Ä—à—ë–Ω.")